project(Cleaneling)

cmake_minimum_required (VERSION 2.8)

set(STATIC_OR_SHARED SHARED CACHE STRING "Build STATIC or SHARED libraries")

file(READ ${CMAKE_CURRENT_SOURCE_DIR}/VERSION PicoSAT_VERSION)
file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/cxxflags.h
"#define CLEANELING_CXX \"${CMAKE_CXX_COMPILER}\"
#define CLEANELING_CXXFLAGS \"${CMAKE_CXX_FLAGS}\"
#define NLGL 1
")

file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/config.h
"// Automatically generated by 'cmake': do note edit!
#define CLEANELING_OS \"${CMAKE_SYSTEM}\"
#define CLEANELING_COMPILED \"unknown\"
#define CLEANELING_RELEASED \"Tue Jun 12 10:09:56 CEST 2012\"
#define CLEANELING_VERSION \"00a\"
#define CLEANELING_ID \"fb3136fde07ee5eea0cf4a8f7de5b7da21c98999\"
")


add_definitions (-DNLGL -DNLOG) 
 
include_directories (${CMAKE_CURRENT_BINARY_DIR})

add_library ( Cleaneling_libcleaneling
  ${STATIC_OR_SHARED}
  libcleaneling.cc 
  config.cc 
  )
set_target_properties(Cleaneling_libcleaneling PROPERTIES OUTPUT_NAME cleaneling)

add_executable ( Cleaneling_cleaneling cleaneling.cc )
set_target_properties (Cleaneling_cleaneling PROPERTIES OUTPUT_NAME cleaneling )
target_link_libraries ( Cleaneling_cleaneling Cleaneling_libcleaneling )

file(WRITE ${PROJECT_BINARY_DIR}/CleanelingConfig.cmake 
  "set(Cleaneling_FOUND 1)
set(CLEANELING_VERSION 00a)
get_filename_component(Cleaneling_CONFIG_DIR "\${CMAKE_CURRENT_LIST_FILE}" PATH)
set(Cleaneling_INCLUDE_DIR \${Cleaneling_CONFIG_DIR}/../../include)
include("\${Cleaneling_CONFIG_DIR}/Cleaneling.cmake" )
")
file(WRITE ${PROJECT_BINARY_DIR}/CleanelingConfigVersion.cmake 
"if(\"\${PACKAGE_FIND_VERSION}\" VERSION_EQUAL 00a)
set(PACKAGE_VERSION_EXACT 1)
set(PACKAGE_VERSION_COMPATIBLE 1)
endif(\"\${PACKAGE_FIND_VERSION}\" VERSION_EQUAL 00a)
")
## create libPicoSAT config file for internal use
file(WRITE ${PROJECT_BINARY_DIR}/Cleaneling.cmake 
"set(Cleaneling_INCLUDE_DIR 
)
")
## export target with install
INSTALL( FILES
  ${PROJECT_BINARY_DIR}/CleanelingConfig.cmake
  ${PROJECT_BINARY_DIR}/CleanelingConfigVersion.cmake
  DESTINATION share/Cleaneling)
install(EXPORT Cleaneling DESTINATION share/Cleaneling)

install(TARGETS 
  Cleaneling_libcleaneling
  Cleaneling_cleaneling
  EXPORT Cleaneling
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin
  ARCHIVE DESTINATION lib
)

install(FILES
  cleaneling.h 
  DESTINATION include 
)

